import React, { useState, useContext } from "react";
import ProjectContext from "@/context/ProjectContext";
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import {
  ExclamationTriangleIcon,
  RocketIcon,
  CaretSortIcon,
  CheckIcon,
} from "@radix-ui/react-icons";
import { Alert, AlertDescription, AlertTitle } from "@/components/ui/alert";
import { Check, ChevronsUpDown } from "lucide-react";
import { cn } from "@/lib/utils";
import {
  Command,
  CommandEmpty,
  CommandGroup,
  CommandInput,
  CommandItem,
  CommandList,
} from "@/components/ui/command";
import {
  Popover,
  PopoverContent,
  PopoverTrigger,
} from "@/components/ui/popover";

function EpicForm(props) {
  const { projects, epicData } = useContext(ProjectContext);

  let [create, setCreate] = useState(props.create);

  // Form data state
  let [epic, setEpic] = useState(null);
  let [epicComboBoxOpen, setEpicComboBoxOpen] = useState(null);
  let [epicIdValue, setEpicIdValue] = useState(null);

  return (
    <div className="space-y-4">
      <div className="space-y-2">
        <Label htmlFor="username">Project</Label>
        <Popover open={epicComboBoxOpen} onOpenChange={setEpicComboBoxOpen}>
          <PopoverTrigger asChild>
            <Button
              variant="outline"
              role="combobox"
              aria-expanded={epicComboBoxOpen}
              className="w-[200px] justify-between"
            >
              {epicIdValue
                ? epicData.find((epic) => epic.id === Number(epicIdValue))?.name
                : "Select epic..."}
              <ChevronsUpDown className="w-4 h-4 ml-2 opacity-50 shrink-0" />
            </Button>
          </PopoverTrigger>
          <PopoverContent className="w-[200px] p-0">
            <Command>
              <CommandInput placeholder="Search epic..." />
              <CommandEmpty>No epic found.</CommandEmpty>
              <CommandGroup>
                {epicData.map((epic) => (
                  <CommandItem
                    key={epic.id}
                    value={String(epic.id)}
                    onSelect={(currentIdValue) => {
                      console.log("Selected epic ID:", currentIdValue);
                      setEpicIdValue(
                        currentIdValue === String(epicIdValue)
                          ? null
                          : Number(currentIdValue)
                      );
                      setEpicComboBoxOpen(false);
                    }}
                  >
                    <Check
                      className={cn(
                        "mr-2 h-4 w-4",
                        epicIdValue === epic.id ? "opacity-100" : "opacity-0"
                      )}
                    />
                    {epic.name}
                  </CommandItem>
                ))}
              </CommandGroup>
            </Command>
          </PopoverContent>
        </Popover>
      </div>
    </div>
  );
}

export default EpicForm;
